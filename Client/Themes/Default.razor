@namespace Dunamix.Material2SicElf
@using Dunamix.Material2SicElf.Controls
@inherits ThemeBase
@inject ISettingService SettingService

<main role="main" id="main">

   <NavBar/>
    <div class="content">
        <div class="container">
            <div class="row">
                <div class="col-md-12">
                    <Pane Name="@PaneNames.Default" />
                </div>
            </div>
        </div>
        <Pane Name="Top Full Width" />
        <div class="container">
            <div class="row">
                <div class="col-md-12">
                    <Pane Name="Top 100%" />
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <Pane Name="Left 50%" />
                </div>
                <div class="col-md-6">
                    <Pane Name="Right 50%" />
                </div>
            </div>
            <div class="row">
                <div class="col-md-4">
                    <Pane Name="Left 33%" />
                </div>
                <div class="col-md-4">
                    <Pane Name="Center 33%" />
                </div>
                <div class="col-md-4">
                    <Pane Name="Right 33%" />
                </div>
            </div>
            <div class="row">
                <div class="col-md-3">
                    <Pane Name="Left Outer 25%" />
                </div>
                <div class="col-md-3">
                    <Pane Name="Left Inner 25%" />
                </div>
                <div class="col-md-3">
                    <Pane Name="Right Inner 25%" />
                </div>
                <div class="col-md-3">
                    <Pane Name="Right Outer 25%" />
                </div>
            </div>
            <div class="row">
                <div class="col-md-3">
                    <Pane Name="Left 25%" />
                </div>
                <div class="col-md-6">
                    <Pane Name="Center 50%" />
                </div>
                <div class="col-md-3">
                    <Pane Name="Right 25%" />
                </div>
            </div>
            <div class="row">
                <div class="col-md-8">
                    <Pane Name="Left Sidebar 66%" />
                </div>
                <div class="col-md-4">
                    <Pane Name="Right Sidebar 33%" />
                </div>
            </div>
            <div class="row">
                <div class="col-md-4">
                    <Pane Name="Left Sidebar 33%" />
                </div>
                <div class="col-md-8">
                    <Pane Name="Right Sidebar 66%" />
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <Pane Name="Bottom 100%" />
                </div>
            </div>
        </div>
        <Pane Name="Bottom Full Width" />
        @if (_footer)
        {
            <div style="clear: both; height: 30px;"></div>
            <div class="bg-primary fixed-bottom footer">
                <Pane Name="Footer" />
            </div>
        }
        else
        {
            <Pane Name="Footer" />
        }
	</div>
</main>

@code {
    public override string Name => "Default Theme";

    public override string Panes => PaneNames.Default + ",Landing,Top Full Width,After Full Width,Top 100%,Left 50%,Right 50%,Left 33%,Center 33%,Right 33%,Left Outer 25%,Left Inner 25%,Right Inner 25%,Right Outer 25%,Left 25%,Center 50%,Right 25%,Left Sidebar 66%,Right Sidebar 33%,Left Sidebar 33%,Right Sidebar 66%,Bottom 100%,Bottom Full Width,Footer";
    public override List<Resource> Resources => new List<Resource>()
    {
        new Resource { ResourceType = ResourceType.Stylesheet, Url = "https://fonts.googleapis.com/css?family=Ubuntu:300,400,500,700&display=swap", CrossOrigin = "anonymous" },
        new Resource { ResourceType = ResourceType.Stylesheet, Url ="https://maxst.icons8.com/vue-static/landings/line-awesome/line-awesome/1.3.0/css/line-awesome.min.css" },
        new Resource { ResourceType = ResourceType.Stylesheet, Url = ThemePath() + "css/Theme.css" },
        new Resource { ResourceType = ResourceType.Script, Url = ThemePath() + "/js/site.js" },
        new Resource { ResourceType = ResourceType.Script, Url = "https://cdn.jsdelivr.net/npm/mdbootstrap@4.20.0/js/mdb.min.js" },
        new Resource { ResourceType = ResourceType.Script, Bundle = "Bootstrap", Url = "https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.2.0/js/bootstrap.bundle.min.js", Integrity = "sha512-9GacT4119eY3AcosfWtHMsT5JyZudrexyEVzTBWV3viP/YfB9e2pEy3N7WXL3SV6ASXpTU0vzzSxsbfsuUH4sQ==", CrossOrigin = "anonymous" },
    };

    private bool _login = true;
    private bool _register = true;
    private bool _footer = false;
    private bool _isHome = true;
    private string _themePrefix = "dunamix-";

    private string _backgroundUrl = "";

    protected override void OnParametersSet()
    {
        try
        {
            var settings = SettingService.MergeSettings(PageState.Site.Settings, PageState.Page.Settings);
            _login = bool.Parse(SettingService.GetSetting(settings, GetType().Namespace + ":Login", "true"));
            _register = bool.Parse(SettingService.GetSetting(settings, GetType().Namespace + ":Register", "true"));
            _footer = bool.Parse(SettingService.GetSetting(settings, GetType().Namespace + ":Footer", "true"));
            _backgroundUrl = SettingService.GetSetting(settings, GetType().Namespace + ":Background-Url", string.Format("{0}img/{1}bck.jpg", ThemePath(), _themePrefix));
            @if (PageState.Page.Name != "Home")
            {
                _isHome = false;
            }
        }
        catch
        {
            // error loading theme settings
        }
    }

}
